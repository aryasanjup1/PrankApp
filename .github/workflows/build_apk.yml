name: Build APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04  # Use stable Ubuntu version

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install System Dependencies
        run: |
          echo "🔄 Updating system..."
          sudo apt update
          sudo apt install -y \
            build-essential git openjdk-17-jdk unzip wget \
            python3 python3-pip python3-setuptools \
            libffi-dev libssl-dev liblzma-dev \
            zlib1g-dev libgirepository1.0-dev libc6 libstdc++6

      - name: Install Buildozer & Dependencies
        run: |
          echo "🔄 Installing Python dependencies..."
          pip install --upgrade pip
          pip install buildozer cython virtualenv
          sudo apt install -y ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev

      - name: Install Android SDK & Fix `aidl` Error
        run: |
          echo "🔄 Setting up Android SDK..."
          export ANDROID_HOME=$HOME/.android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          
          if [ ! -f commandlinetools-linux-10406996_latest.zip ]; then
            wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          fi
          
          unzip -o commandlinetools-linux-10406996_latest.zip -d latest
          yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses
          sdkmanager --sdk_root=$ANDROID_HOME --install "platform-tools" "platforms;android-31" "build-tools;31.0.0" "cmdline-tools;latest" "tools" "ndk;25.1.8937393"

      - name: Initialize Buildozer
        run: |
          echo "🔄 Initializing Buildozer..."
          cd $GITHUB_WORKSPACE
          buildozer init || true  # Creates buildozer.spec if missing
          
          echo "🔄 Applying automatic fixes..."
          sed -i 's/# android.accept_sdk_license = False/android.accept_sdk_license = True/' buildozer.spec
          sed -i 's/# android.ndk = /android.ndk = 25.1.8937393/' buildozer.spec
          sed -i 's/# android.api = 31/android.api = 31/' buildozer.spec
          sed -i 's/# android.gradle_dependencies = /android.gradle_dependencies = com.android.support:support-v4:27.1.1/' buildozer.spec

      - name: Build APK (With Error Handling)
        run: |
          echo "🔄 Building APK..."
          cd $GITHUB_WORKSPACE
          if buildozer -v android debug; then
            echo "✅ Build successful!"
          else
            echo "❌ Build failed! Retrying with verbose logs..."
            buildozer -v android debug > build_error.log 2>&1 || exit 1
          fi

      - name: Upload Debug Log (if failed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Build-Failure-Logs
          path: build_error.log

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PrankApp-APK
          path: bin/*.apk
